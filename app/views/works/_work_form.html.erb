<div id="story-form">
  <%- form_for(@work) do |f| -%> 
 
    <p class="field-left">   
    
	  <% fields_for_associated('work', @work.metadata) do |m| %>
      <!-- Story title field (metadata_attributes_title) -->
        <%= m.label :title, "Story Title*", :class => "required" %><br />
        <%= m.text_field :title, :class => "storyinputfield" %>
        <%= image_tag("question.png", :size => "20x20", :alt => "More info") %><br />
        
        <script>
          var work_metadata_attributes_title = new LiveValidation('work_metadata_attributes_title', { validMessage: 'Thanks, that length looks good.', wait: 500 });
          work_metadata_attributes_title.add(Validate.Length, {"failureMessage": "must be at least 3 letters long.", "minimum": 3, "validMessage": ""});
          work_metadata_attributes_title.add(Validate.Length, {"failureMessage": "must be less than 255 letters long.", "maximum": 255, "validMessage": ""});
          work_metadata_attributes_title.add(Validate.Presence, {"if": "is_work?", "failureMessage": "is required.", "validMessage": ""})
        </script>

      <!-- Chaptered checkbox (work_is_wip) -->
      <!-- Checking this box causes the expected number of chapters box to appear; unchecking it causes it to disappear. -->
      <input type="checkbox" name="is-wip" tabindex="2" 
      onclick="showChapteredStoryOptions()" <%- if @work.chaptered? -%>checked="checked"<%- end -%>/> Chaptered work?

      <!-- Series checkbox (storyseriescheck) -->
      <!-- Checking this box causes the "manage series" dropdown to appear; unchecking it causes it to disappear.  STILL NEEDS Rails integration. -->
      <input type="checkbox" name="storyseriescheck" tabindex="3" onclick="new Effect.toggle($('seriesmanage'),'appear')"/>Part of a series?<br />

    </p>

    <!-- Toggles on with series checkbox -->
    <p id="seriesmanage" class="field-right" style="display:none;">
      <span class="required"><strong>Not yet implemented! Series data will not be saved.</strong></span><br /><br />
      <span class="storylabel"><label for="storyseries">Select Series</label></span><br />

      <!-- Dropdown/text field for adding series -->
    	<select name="storyseries" class="storyinputfield" tabindex="4">

      <!-- Fake options!  These need to be populated by the backend. -->
    		<option>New Series (enter title below)</option>
    		<option>Series 1</option>
    		<option>Series 2</option>
    	</select>
    	<%= image_tag("question.png", :size => "20x20", :alt => "More info") %><br />

    	<span class="storylabel"><label for="newseriesinput">...or add a new Series Title</label></span><br />
    	<input type="text" name="newseriesinput" class="storyinputfield" tabindex="5" />
    </p>

    <p class="clearbothdrop"></p>
    
    <!-- Story text field (chapter_attributes_content) -->
  	<% fields_for_associated('work', @work.chapters.first) do |c| %>
    
    <!-- Number of chapters (work_expected_number_of_chapters) -->
    <% if @work.chaptered? %>
      <div id="number-of-chapters"> 
    <% else %>
      <div id="number-of-chapters" style="display:none;">
    <% end %>
      <p>
        Chapter 1 of <%= f.text_field :wip_length, :class => "number-field" %> Title: <%= c.text_field :title %>
      </p>
    </div>    

    <p>
      <%= c.label :content, "Story, in plain text with limited HTML*", :class => "required" %><br />
    	<%= c.text_area :content %>
    	<script>
        var work_chapter_attributes_content = new LiveValidation('work_chapter_attributes_content', { validMessage: 'Thanks, that length looks good.', wait: 500 });
        work_chapter_attributes_content.add(Validate.Length, {"failureMessage": "must be less than 16777215 letters long.", "maximum": 16777215, "validMessage": ""});
        work_chapter_attributes_content.add(Validate.Presence, {"failureMessage": "is required.", "validMessage": ""})
      </script>
    </p>
  <% end %>

    <!-- Author dropdown (pseud_id) -->
  	<p class="field-left">
  	  <%= label :pseud, :id, "Select author/pseudonym(s)" %><br />
   	  <select name="work[author_attributes][ids][]" multiple="multiple">
        <%= options_from_collection_for_select(@pseuds, :id, :name, @selected) %>
      </select> 
  	</p>
	
    <p class="field-right"> 
      <%= link_to 'Create pseud?', new_user_pseud_path(current_user) %><br />  
      <%= link_to_function('Add co-authors?', "Element.toggle('co-authors')") %>
    </p>
	
  	<p class="clearboth"></p>
  	
  	<% fields_for "work[author_attributes]" do |a| %>
  	<noscript>
    	<div id="no_js_co-authors">
    	  <label for="storycoauthor">Enter co-author name(s): </label><br />
    	  <%= a.text_field :name %>
    	</div>
    	
    	<%= hidden_field "no_script", :true %>
    	
  	</noscript>
  	<%- end -%>

    <div id="co-authors" style="display : none;"> 	  
      <p id="coauthormanage">
        <p>
       	  <span class="storylabel"><label for="storycoauthor">Enter co-author name(s):</label></span>
          <%= text_field_with_auto_complete :pseud, :name, { :size => 30 }, { :tokens => ',', :skip_style => true } %>
          <%= link_to_remote "Choose co-authors", :url=>{ :controller => :pseuds, :action => :choose_coauthors }, :with => "'names='+$F('pseud_name')+'&creation=work'" %> | 
          <%= link_to_function "Clear co-authors", update_page {|page| page.replace_html 'return_coauthors'} %>
        </p> 
      </p>                   
    </div>
    	
  	<div id="return_coauthors">
   	</div> 

  	<p class="clearboth"></p> 
	
  	<!-- Privacy dropdown (storyprivacy) -->
  	<p>
      <span class="storylabel"><label for="storyprivacy">Privacy level</label></span><br />
      <select name="storyprivacy" class="storyinputfield" tabindex="10">
        <!-- Fake options!  These need to be populated by the backend or hard-coded, as appropriate. -->
      	<option>Public: Everyone can read</option>
      	<option>Fake option: insert real option here</option>
      	<option>Fake option #2: insert real option #2 here</option>
      </select>
      <%= image_tag("question.png", :size => "20x20", :alt => "More info") %><br /> 
    </p>
	
    <!-- Summary field (metadata_attributes_summary) -->
    <p>
      <%= m.label :summary, "Summary (max %d letters)"/Metadata::SUMMARY_MAX %><br />
      <%= m.text_area :summary, :class => "metadata-field" %>
      <script>
        var work_metadata_attributes_summary = new LiveValidation('work_metadata_attributes_summary', { validMessage: 'Thanks, that length looks good.', wait: 500 });
        work_metadata_attributes_summary.add(Validate.Length, {"failureMessage": "must be less than 1250 letters long.", "maximum": 1250, "validMessage": ""})
      </script>
      
    </p>

    <!-- Notes field (metadata_attributes_notes) -->
    <p>
      <%= m.label :notes, "Notes (max %d letters)"/Metadata::NOTES_MAX %><br />
      <%= m.text_area :notes, :class => "metadata-field" %> 
      <script>
        var work_metadata_attributes_notes = new LiveValidation('work_metadata_attributes_notes', { validMessage: 'Thanks, that length looks good.', wait: 500 });
        work_metadata_attributes_notes.add(Validate.Length, {"failureMessage": "must be less than 2500 letters long.", "maximum": 2500, "validMessage": ""})
      </script>
    </p>
	<%- end -%>

    <p class="field-right">
      <%= submit_tag 'Preview', :name => 'preview_button' %>
      <%= button_to_function "Cancel", "javascript:history.back()" %>
    </p> 
    
  <%- end -%>

  <p class="clearboth"></p> 
</div>
