<!-- Autocomplete fields need to be refactored and moved to a helper, but I'd like to make them completely functional first. -->
<fieldset class="work-meta">
  <p><%= "Story Tags (comma separated)".t -%><%= link_to_help "tagging-help" -%></p>
  <dl>
    <dt class="rating required">
      <label for=""><%= Rating::NAME.t -%>*</label>
    </dt>
    <dd class="rating required">
      <%= collection_select(:work, :rating_string, Rating.canonical, :name, :name) -%>		
    </dd>
    <dt class="warning required">
      <label for=""><%= Warning::NAME.t -%>*</label>
    </dt>
    <dd class="warning required">
      <select id="work_warning" name="work[warning_strings][]" multiple="multiple">
        <%= options_from_collection_for_select(@tags_by_category["Warning"], :name, :name, warning_selected(@work) ) -%>
      </select>
    </dd>
    <dt class="category required">
      <label for=""><%= Category::NAME.t -%>*</label>
    </dt>
    <dd class="category required">
      <%= collection_select(:work, :category_string, Category.canonical, :name, :name, {:prompt => true}) -%>		
    </dd>
    <dt class="fandom required">
      <label for=""><%= Fandom::NAME.pluralize.t -%>*</label>
    </dt>
    <dd class="fandom required">
      <input type="text" name="work[fandom_string]" id="work_fandom" value="<%= @work.fandom_string %>" />
      <div class="auto_complete" id="work_fandom_auto_complete" ></div>
      <%= javascript_tag("new Autocompleter.Local('work_fandom', 'work_fandom_auto_complete', Fandom.canonical.find(:all, :order => :name).map(&:name).to_json}, {tokens: ','});") %>
    </dd>
    <dt class="pairing">
      <label for=""><%= Pairing::NAME.pluralize.t -%></label>
    </dt>
    <dd class="pairing">
      <input type="text" name="work[pairing_string]" id="work_pairing" value="<%= @work.pairing_string %>"/>
      <div class="auto_complete" id="work_pairing %>_auto_complete" ></div>
      <%= javascript_tag("new Autocompleter.Local('work_pairing', 'work_pairing_auto_complete', Pairing.canonical.find(:all, :order => :name).map(&:name).to_json}, {tokens: ','});") %>
    </dd>
    <dt class="character">
      <label for=""><%= Character::NAME.pluralize.t -%></label>
    </dt>
    <dd class="character">
      <input type="text" name="work[character_string]" id="work_character" value="<%= @work.character_string %>" />
      <div class="auto_complete" id="work_character %>_auto_complete" ></div>
      <%= javascript_tag("new Autocompleter.Local('work_character', 'work_character_auto_complete', Character.canonical.find(:all, :order => :name).map(&:name).to_json}, {tokens: ','});") %>
    </dd>
    <dt class="freeform">
      <label for=""><%= Freeform::NAME.pluralize.t -%></label>
    </dt>
    <dd class="freeform">
      <input type="text" name="work[freeform_string]" id="work_freeform" value="<%= @work.freeform_string %>" />
      <div class="auto_complete" id="work_freeform %>_auto_complete" ></div>
      <%= javascript_tag("new Autocompleter.Local('work_freeform', 'work_freeform_auto_complete', Genre.canonical.find(:all, :order => :name).map(&:name).to_json}, {tokens: ','});") %>
    </dd>
  </dl>
</fieldset>
