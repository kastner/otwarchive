<!-- Autocomplete fields need to be refactored and moved to a helper, but I'd like to make them completely functional first. -->
<fieldset class="work-meta">
  <legend><%= "Story Tags (comma separated)".t -%><%= link_to_help "tagging-help" -%></legend>
    <% TagCategory::OFFICIAL.each do |category| %>
      <dt class="<%= category.display_name.downcase + (category.required ? ' required' : '') -%>">
        <label for=""><%= category.display_name.t -%></label>
      </dt>
      <dd class="<%= category.display_name.downcase + (category.required ? ' required' : '') -%>">
        <%- if category.exclusive && category.required -%>
          <%= collection_select(:work, category.name.to_sym, @tags_by_category[category], :name, :name) -%>		
        <%- elsif category.exclusive -%>
          <%= collection_select(:work, category.name.to_sym, @tags_by_category[category], :name, :name, {:prompt => true}) -%>          
        <%- elsif category == TagCategory::WARNING -%>
          <select id="work_<%= category.name %>" name="work[<%= category.name %>][]" multiple="multiple">
	          <%= options_from_collection_for_select(@tags_by_category[category], :name, :name, warning_selected(@work, category) ) -%>
	        </select>
        <%- else -%>
					<input type="text" name="work[<%= category.name %>]" id="work_<%= category.name %>" value="<%= @work.tags.by_category(category).collect(&:name).join(', ') %>" />
          <div class="auto_complete" id="work_<%= category.name %>_auto_complete" ></div>
          <%= javascript_tag("new Autocompleter.Local('work_#{category.name}', 'work_#{category.name}_auto_complete', #{category.tags.valid.find(:all, :order => :name).map(&:name).to_json}, {tokens: ','});") %>
        <%- end -%>
        <%- if category.required -%>
          <%= live_validation_for_field('work_' + category.name) -%>
        <%- end -%>
      </dd>
    <%- end -%>    
  </dl>
</fieldset>
